---
- hosts:  'cas'
  become: 'yes'
  roles:
    - 'City-of-Bloomington.tomcat'
  tasks:
    - name: "Update apache configuration"
      template:
        src:   'cas.conf'
        dest:  '/etc/apache2/sites-enabled/conf.d/cas.conf'
      notify:  'apache_restart'

    - name: 'Add drop-in unit file'
      copy:
        src: 'tomcat.service'
        dest: "/etc/systemd/system/{{ tomcat_package }}.service.d/cas.conf"
      notify: 'linux_systemd_reload'

    - name: "Create directories"
      file:
        path:    "{{ item }}"
        state:   "directory"
        owner:   "{{ tomcat_user }}"
        recurse: 'yes'
      with_items:
        - '/etc/cas/config'
        - '/etc/cas/saml'
        - '/etc/cas/services'
        - '/etc/cas/ssl'

    - name: "Configure CAS"
      template:
        src: "cas.properties"
        dest: "/etc/cas/config"
      notify: "tomcat_restart"

    - name: "Install Google Private Key"
      copy:
        content: "{{ cas_google_ssl.private }}"
        dest: "/etc/cas/ssl/private.pem"
        mode: "0640"
        owner: "{{ tomcat_user }}"
      when: cas_google_ssl.private is defined
      register: "private_pem"
      #no_log: True
      notify: "tomcat_restart"

    #- name: "Convert Google Private Key"
    #  command: "openssl pkcs8 -topk8 -inform PEM -outform DER -nocrypt -in private.pem -out private.p8"
    #  args:
    #    chdir: "/etc/cas/ssl"
    #  when: private_pem.changed

    - name: "Install Google Public Key"
      command: "openssl rsa -pubout -in private.pem -out public.der -inform PEM -outform DER"
      args:
        chdir: "/etc/cas/ssl"
      when: private_pem.changed
      #no_log: True
      notify: "tomcat_restart"

    - name: "Install Google Cert"
      copy:
        content: "{{ cas_google_ssl.cert }}"
        dest: "/etc/cas/ssl/x509.pem"
        mode: "0640"
        owner: "{{ tomcat_user }}"
      when: cas_google_ssl.cert is defined
      #no_log: True
      notify: "tomcat_restart"

    - name: "Configure services"
      copy:
        src:   "{{ item }}"
        dest:  '/etc/cas/services/'
        owner: "{{ tomcat_user }}"
      with_fileglob:
        - "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/cas/services/*.json"
        - "{{ inventory_dir }}/group_vars/cas/services/*.json"
      notify: "tomcat_restart"

    - name: "Install Webapp"
      copy:
        src:  '../build/libs/cas.war'
        dest: "{{ cas_install_path }}.war"
      notify: "tomcat_restart"
...
